{"version":3,"sources":["redux/reducer.js","components/TodoItem.js","components/TodoForm.js","components/Todos.js","App.js","redux/store.js","index.js"],"names":["addTodoReducer","createSlice","name","initialState","reducers","addTodos","state","action","push","payload","removeTodos","filter","item","id","updateTodos","map","todo","completeTodos","completed","actions","reducer","TodoItem","props","updateTodo","removeTodo","completeTodo","inputRef","useRef","className","ref","disabled","defaultValue","onKeyPress","e","value","which","current","update","onClick","focus","style","color","connect","todos","dispatch","addTodo","obj","useState","sort","title","length","setTodo","add","alert","uuidv4","type","onChange","target","event","keyPress","App","store","configureStore","preloadedState","localStorage","getItem","JSON","parse","undefined","loadFromLocalStorage","subscribe","getState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b45f8e03.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst addTodoReducer = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n\n    addTodos: (state, action) => {\n      state.push(action.payload);\n      return state;\n    },\n\n    removeTodos: (state, action) => {\n      return state.filter((item) => item.id !== action.payload);\n    },\n\n    updateTodos: (state, action) => {\n      return state.map((todo) => {\n        if (todo.id === action.payload.id) {\n          return {\n            ...todo,\n            item: action.payload.item,\n          };\n        }\n        return todo;\n      });\n    },\n\n    completeTodos: (state, action) => {\n      return state.map((todo) => {\n        if (todo.id === action.payload) {\n          return {\n            ...todo,\n            completed: true,\n          };\n        }\n        return todo;\n      });\n    },\n  },\n});\n\nexport const {\n  addTodos,\n  removeTodos,\n  updateTodos,\n  completeTodos,\n} = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;","import { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport React from 'react';\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { IoCheckmarkDoneSharp, IoClose } from \"react-icons/io5\";\n\n\n\nconst TodoItem = (props) => {\n  const { item, updateTodo, removeTodo, completeTodo } = props;\n\n  const inputRef = useRef(true);\n\n  const changeFocus = () => {\n    inputRef.current.disabled = false;\n    inputRef.current.focus();\n  };\n\n  const update = (id, value, e) => {\n    if (e.which === 13) {\n      updateTodo({ id, item: value });\n      inputRef.current.disabled = true;\n    }\n  };\n  return (\n    <li\n      key={item.id}\n      className=\"card\"\n    >\n      <textarea\n        ref={inputRef}\n        disabled={inputRef}\n        defaultValue={item.item}\n        onKeyPress={(e) => update(item.id, inputRef.current.value, e)}\n      />\n      <div className=\"btns\">\n        <button\n          onClick={() => changeFocus()}\n        >\n          <AiFillEdit />\n        </button>\n        {item.completed === false && (\n          <button\n            style={{ color: \"green\" }}\n            onClick={() => completeTodo(item.id)}\n          >\n            <IoCheckmarkDoneSharp />\n          </button>\n        )}\n        <button\n          style={{ color: \"red\" }}\n          onClick={() => removeTodo(item.id)}\n        >\n          <IoClose />\n        </button>\n      </div>\n      {item.completed && <span className=\"completed\">done</span>}\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n\n  updateTodo: PropTypes.func,\n  removeTodo: PropTypes.func,\n  completeTodo: PropTypes.func,\n}\n\n\nexport default TodoItem;\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  addTodos,\n  completeTodos,\n  removeTodos,\n  updateTodos,\n} from \"../redux/reducer\";\nimport TodoItem from \"./TodoItem\";\nimport React from 'react';\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTodo: (obj) => dispatch(addTodos(obj)),\n    removeTodo: (id) => dispatch(removeTodos(id)),\n    updateTodo: (obj) => dispatch(updateTodos(obj)),\n    completeTodo: (id) => dispatch(completeTodos(id)),\n  };\n};\n\nconst TodoForm = (props) => {\n  const [sort, filter] = useState(\"active\");\n  return (\n    <div className=\"todoform\">\n      <div className=\"buttons\">\n        <button title=\"Task Active!\" onClick={() => filter(\"active\")}>Active</button>\n        <button title=\"Task Completed!\" onClick={() => filter(\"completed\")}>Completed</button>\n        <button title=\"ALL Tasks!\" onClick={() => filter(\"all\")}>All</button>\n      </div>\n      <ul>\n\n        {props.todos.length > 0 && sort === \"active\"\n          ? props.todos.map((item) => {\n            return (\n              item.completed === false && (\n                <TodoItem\n                  key={item.id}\n                  item={item}\n                  removeTodo={props.removeTodo}\n                  updateTodo={props.updateTodo}\n                  completeTodo={props.completeTodo}\n                />\n              )\n            );\n          })\n          : null}\n        {props.todos.length > 0 && sort === \"completed\"\n          ? props.todos.map((item) => {\n            return (\n              item.completed === true && (\n                <TodoItem\n                  key={item.id}\n                  item={item}\n                  removeTodo={props.removeTodo}\n                  updateTodo={props.updateTodo}\n                  completeTodo={props.completeTodo}\n                />\n              )\n            );\n          })\n          : null}\n        {props.todos.length > 0 && sort === \"all\"\n          ? props.todos.map((item) => {\n            return (\n              <TodoItem\n                key={item.id}\n                item={item}\n                removeTodo={props.removeTodo}\n                updateTodo={props.updateTodo}\n                completeTodo={props.completeTodo}\n              />\n            );\n          })\n          : null}\n\n      </ul>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodos } from \"../redux/reducer\";\nimport { v4 as uuidv4 } from 'uuid';\nimport React from 'react';\n\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTodo: (obj) => dispatch(addTodos(obj)),\n  };\n};\n\nconst Todos = (props) => {\n  const [todo, setTodo] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTodo(e.target.value);\n  };\n\n  const add = () => {\n    if (todo === \"\")  {\n      alert(\"Если хотите добавить задачу, введите значение\");\n    } else {\n      props.addTodo({\n        id: uuidv4(),\n        item: todo,\n        completed: false,\n      });\n      setTodo(\"\");\n    }\n  };\n  const keyPress = (event) => {\n    if (event.which === 13) {\n        add();\n    }\n};\n \n  return (\n    <div className=\"addTodos\">\n      <input\n        type=\"text\"\n        onChange={handleChange}\n        className=\"todo-input\"\n        value={todo}\n        onKeyPress={(event) => keyPress(event)} \n      />\n\n      <button \n      title=\"Add ToDo Task\" \n      className=\"add-btn\" \n      onClick={() => add()}\n      >\n        +\n      </button>\n      <br />\n    </div>\n  );\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import \"./style/main.scss\";\nimport TodoForm from \"./components/TodoForm\";\nimport Todos from \"./components/Todos\";\nimport React from 'react';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>ToDo List App</h1>\n      <div>\n        <Todos />\n        <TodoForm />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { reducer } from \"./reducer\";\n\nconst saveToLocalStorage = (state) => {\n    localStorage.setItem('state', JSON.stringify(state));\n};\n\nconst loadFromLocalStorage = () => {\n    const state = localStorage.getItem('state');\n    return state ? JSON.parse(state) : undefined;\n};\n\nconst store = configureStore({ reducer: reducer, preloadedState: loadFromLocalStorage() });\n\nstore.subscribe(() => {\n    saveToLocalStorage(store.getState());\n});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}