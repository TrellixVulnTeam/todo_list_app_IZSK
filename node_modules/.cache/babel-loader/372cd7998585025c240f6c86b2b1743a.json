{"ast":null,"code":"var _jsxFileName = \"/Users/vadimokulik/Documents/react/todo_list_app/src/components/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport React from 'react';\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { IoCheckmarkDoneSharp, IoClose } from \"react-icons/io5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = props => {\n  _s();\n\n  const {\n    item,\n    updateTodo,\n    removeTodo,\n    completeTodo\n  } = props;\n  const inputRef = useRef(true);\n\n  const changeFocus = () => {\n    inputRef.current.disabled = false;\n    inputRef.current.focus();\n  };\n\n  const update = (id, value, e) => {\n    if (e.which === 13) {\n      updateTodo({\n        id,\n        item: value\n      });\n      inputRef.current.disabled = true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: inputRef,\n      disabled: inputRef,\n      defaultValue: item.item,\n      onKeyPress: e => update(item.id, inputRef.current.value, e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btns\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeFocus(),\n        children: /*#__PURE__*/_jsxDEV(AiFillEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), item.completed === false && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: \"green\"\n        },\n        onClick: () => completeTodo(item.id),\n        children: /*#__PURE__*/_jsxDEV(IoCheckmarkDoneSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: \"red\"\n        },\n        onClick: () => removeTodo(item.id),\n        children: /*#__PURE__*/_jsxDEV(IoClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), item.completed && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"completed\",\n      children: \"done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }, this)]\n  }, item.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = TodoItem;\nTodoItem.propTypes = {\n  updateTodo: PropTypes.func,\n  removeTodo: PropTypes.func,\n  completeTodo: PropTypes.func\n};\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/vadimokulik/Documents/react/todo_list_app/src/components/TodoItem.js"],"names":["useRef","PropTypes","React","AiFillEdit","IoCheckmarkDoneSharp","IoClose","TodoItem","props","item","updateTodo","removeTodo","completeTodo","inputRef","changeFocus","current","disabled","focus","update","id","value","e","which","completed","color","propTypes","func"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,oBAAT,EAA+BC,OAA/B,QAA8C,iBAA9C;;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA;AAAhC,MAAiDJ,KAAvD;AAEA,QAAMK,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAMa,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,QAAjB,GAA4B,KAA5B;AACAH,IAAAA,QAAQ,CAACE,OAAT,CAAiBE,KAAjB;AACD,GAHD;;AAKA,QAAMC,MAAM,GAAG,CAACC,EAAD,EAAKC,KAAL,EAAYC,CAAZ,KAAkB;AAC/B,QAAIA,CAAC,CAACC,KAAF,KAAY,EAAhB,EAAoB;AAClBZ,MAAAA,UAAU,CAAC;AAAES,QAAAA,EAAF;AAAMV,QAAAA,IAAI,EAAEW;AAAZ,OAAD,CAAV;AACAP,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,QAAjB,GAA4B,IAA5B;AACD;AACF,GALD;;AAMA,sBACE;AAEE,IAAA,SAAS,EAAC,MAFZ;AAAA,4BAIE;AACE,MAAA,GAAG,EAAEH,QADP;AAEE,MAAA,QAAQ,EAAEA,QAFZ;AAGE,MAAA,YAAY,EAAEJ,IAAI,CAACA,IAHrB;AAIE,MAAA,UAAU,EAAGY,CAAD,IAAOH,MAAM,CAACT,IAAI,CAACU,EAAN,EAAUN,QAAQ,CAACE,OAAT,CAAiBK,KAA3B,EAAkCC,CAAlC;AAJ3B;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AACE,QAAA,OAAO,EAAE,MAAMP,WAAW,EAD5B;AAAA,+BAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cADF,EAMGL,IAAI,CAACc,SAAL,KAAmB,KAAnB,iBACC;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,OAAO,EAAE,MAAMZ,YAAY,CAACH,IAAI,CAACU,EAAN,CAF7B;AAAA,+BAIE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAPJ,eAcE;AACE,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,OAAO,EAAE,MAAMb,UAAU,CAACF,IAAI,CAACU,EAAN,CAF3B;AAAA,+BAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,EA+BGV,IAAI,CAACc,SAAL,iBAAkB;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BrB;AAAA,KACOd,IAAI,CAACU,EADZ;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAnDD;;GAAMZ,Q;;KAAAA,Q;AAqDNA,QAAQ,CAACkB,SAAT,GAAqB;AAEnBf,EAAAA,UAAU,EAAER,SAAS,CAACwB,IAFH;AAGnBf,EAAAA,UAAU,EAAET,SAAS,CAACwB,IAHH;AAInBd,EAAAA,YAAY,EAAEV,SAAS,CAACwB;AAJL,CAArB;AAQA,eAAenB,QAAf","sourcesContent":["import { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport React from 'react';\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { IoCheckmarkDoneSharp, IoClose } from \"react-icons/io5\";\n\n\n\nconst TodoItem = (props) => {\n  const { item, updateTodo, removeTodo, completeTodo } = props;\n\n  const inputRef = useRef(true);\n\n  const changeFocus = () => {\n    inputRef.current.disabled = false;\n    inputRef.current.focus();\n  };\n\n  const update = (id, value, e) => {\n    if (e.which === 13) {\n      updateTodo({ id, item: value });\n      inputRef.current.disabled = true;\n    }\n  };\n  return (\n    <li\n      key={item.id}\n      className=\"card\"\n    >\n      <textarea\n        ref={inputRef}\n        disabled={inputRef}\n        defaultValue={item.item}\n        onKeyPress={(e) => update(item.id, inputRef.current.value, e)}\n      />\n      <div className=\"btns\">\n        <button\n          onClick={() => changeFocus()}\n        >\n          <AiFillEdit />\n        </button>\n        {item.completed === false && (\n          <button\n            style={{ color: \"green\" }}\n            onClick={() => completeTodo(item.id)}\n          >\n            <IoCheckmarkDoneSharp />\n          </button>\n        )}\n        <button\n          style={{ color: \"red\" }}\n          onClick={() => removeTodo(item.id)}\n        >\n          <IoClose />\n        </button>\n      </div>\n      {item.completed && <span className=\"completed\">done</span>}\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n\n  updateTodo: PropTypes.func,\n  removeTodo: PropTypes.func,\n  completeTodo: PropTypes.func,\n}\n\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}