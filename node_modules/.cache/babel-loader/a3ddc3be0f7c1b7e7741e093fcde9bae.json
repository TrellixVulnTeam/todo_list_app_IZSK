{"ast":null,"code":"var _jsxFileName = \"/Users/vadimokulik/Documents/Project/todo_list_app/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodos, completeTodos, removeTodos, updateTodos } from \"../redux/reducer\";\nimport TodoItem from \"./TodoItem\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    todos: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodo: obj => dispatch(addTodos(obj)),\n    removeTodo: id => dispatch(removeTodos(id)),\n    updateTodo: obj => dispatch(updateTodos(obj)),\n    completeTodo: id => dispatch(completeTodos(id))\n  };\n};\n\nconst TodoForm = props => {\n  _s();\n\n  const [sort, filter] = useState(\"active\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoform\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        title: \"Task Active!\",\n        onClick: () => filter(\"active\"),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: \"Task Completed!\",\n        onClick: () => filter(\"completed\"),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: \"ALL Tasks!\",\n        onClick: () => filter(\"all\"),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [props.todos.length > 0 && sort === \"active\" ? props.todos.map(item => {\n        return item.completed === false && /*#__PURE__*/_jsxDEV(TodoItem, {\n          item: item,\n          removeTodo: props.removeTodo,\n          updateTodo: props.updateTodo,\n          completeTodo: props.completeTodo\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this);\n      }) : null, props.todos.length > 0 && sort === \"completed\" ? props.todos.map(item => {\n        return item.completed === true && /*#__PURE__*/_jsxDEV(TodoItem, {\n          item: item,\n          removeTodo: props.removeTodo,\n          updateTodo: props.updateTodo,\n          completeTodo: props.completeTodo\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this);\n      }) : null, props.todos.length > 0 && sort === \"all\" ? props.todos.map(item => {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          item: item,\n          removeTodo: props.removeTodo,\n          updateTodo: props.updateTodo,\n          completeTodo: props.completeTodo\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoForm, \"ZUZcGO7Fn5DTkI1xH6cgQRIaICU=\");\n\n_c = TodoForm;\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/vadimokulik/Documents/Project/todo_list_app/src/components/TodoForm.js"],"names":["useState","connect","addTodos","completeTodos","removeTodos","updateTodos","TodoItem","React","mapStateToProps","state","todos","mapDispatchToProps","dispatch","addTodo","obj","removeTodo","id","updateTodo","completeTodo","TodoForm","props","sort","filter","length","map","item","completed"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  addTodos,\n  completeTodos,\n  removeTodos,\n  updateTodos,\n} from \"../redux/reducer\";\nimport TodoItem from \"./TodoItem\";\nimport React from 'react';\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTodo: (obj) => dispatch(addTodos(obj)),\n    removeTodo: (id) => dispatch(removeTodos(id)),\n    updateTodo: (obj) => dispatch(updateTodos(obj)),\n    completeTodo: (id) => dispatch(completeTodos(id)),\n  };\n};\n\nconst TodoForm = (props) => {\n  const [sort, filter] = useState(\"active\");\n  return (\n    <div className=\"todoform\">\n      <div className=\"buttons\">\n        <button title=\"Task Active!\" onClick={() => filter(\"active\")}>Active</button>\n        <button title=\"Task Completed!\" onClick={() => filter(\"completed\")}>Completed</button>\n        <button title=\"ALL Tasks!\" onClick={() => filter(\"all\")}>All</button>\n      </div>\n      <ul>\n\n        {props.todos.length > 0 && sort === \"active\"\n          ? props.todos.map((item) => {\n            return (\n              item.completed === false && (\n                <TodoItem\n                  key={item.id}\n                  item={item}\n                  removeTodo={props.removeTodo}\n                  updateTodo={props.updateTodo}\n                  completeTodo={props.completeTodo}\n                />\n              )\n            );\n          })\n          : null}\n        {props.todos.length > 0 && sort === \"completed\"\n          ? props.todos.map((item) => {\n            return (\n              item.completed === true && (\n                <TodoItem\n                  key={item.id}\n                  item={item}\n                  removeTodo={props.removeTodo}\n                  updateTodo={props.updateTodo}\n                  completeTodo={props.completeTodo}\n                />\n              )\n            );\n          })\n          : null}\n        {props.todos.length > 0 && sort === \"all\"\n          ? props.todos.map((item) => {\n            return (\n              <TodoItem\n                key={item.id}\n                item={item}\n                removeTodo={props.removeTodo}\n                updateTodo={props.updateTodo}\n                completeTodo={props.completeTodo}\n              />\n            );\n          })\n          : null}\n\n      </ul>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);"]},"metadata":{},"sourceType":"module"}