{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst addTodoReducer = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      state.push(action.payload);\n      return state;\n    },\n    removeTodos: (state, action) => {\n      return state.filter(item => item.id !== action.payload);\n    },\n    updateTodos: (state, action) => {\n      return state.map(todo => {\n        if (todo.id === action.payload.id) {\n          return { ...todo,\n            item: action.payload.item\n          };\n        }\n\n        return todo;\n      });\n    },\n    completeTodos: (state, action) => {\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return { ...todo,\n            completed: true\n          };\n        }\n\n        return todo;\n      });\n    }\n  }\n});\nexport const {\n  addTodos,\n  removeTodos,\n  updateTodos,\n  completeTodos\n} = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;","map":{"version":3,"sources":["/Users/vadimokulik/Documents/Project/todo_list_app/src/redux/reducer.js"],"names":["createSlice","initialState","addTodoReducer","name","reducers","addTodos","state","action","push","payload","removeTodos","filter","item","id","updateTodos","map","todo","completeTodos","completed","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,cAAc,GAAGF,WAAW,CAAC;AACjCG,EAAAA,IAAI,EAAE,OAD2B;AAEjCF,EAAAA,YAFiC;AAGjCG,EAAAA,QAAQ,EAAE;AAERC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACA,aAAOH,KAAP;AACD,KALO;AAORI,IAAAA,WAAW,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC9B,aAAOD,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAA1C,CAAP;AACD,KATO;AAWRK,IAAAA,WAAW,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC9B,aAAOD,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACH,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeI,EAA/B,EAAmC;AACjC,iBAAO,EACL,GAAGG,IADE;AAELJ,YAAAA,IAAI,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAFhB,WAAP;AAID;;AACD,eAAOI,IAAP;AACD,OARM,CAAP;AASD,KArBO;AAuBRC,IAAAA,aAAa,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAChC,aAAOD,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACH,EAAL,KAAYN,MAAM,CAACE,OAAvB,EAAgC;AAC9B,iBAAO,EACL,GAAGO,IADE;AAELE,YAAAA,SAAS,EAAE;AAFN,WAAP;AAID;;AACD,eAAOF,IAAP;AACD,OARM,CAAP;AASD;AAjCO;AAHuB,CAAD,CAAlC;AAwCA,OAAO,MAAM;AACXX,EAAAA,QADW;AAEXK,EAAAA,WAFW;AAGXI,EAAAA,WAHW;AAIXG,EAAAA;AAJW,IAKTf,cAAc,CAACiB,OALZ;AAMP,OAAO,MAAMC,OAAO,GAAGlB,cAAc,CAACkB,OAA/B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst addTodoReducer = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n\n    addTodos: (state, action) => {\n      state.push(action.payload);\n      return state;\n    },\n\n    removeTodos: (state, action) => {\n      return state.filter((item) => item.id !== action.payload);\n    },\n\n    updateTodos: (state, action) => {\n      return state.map((todo) => {\n        if (todo.id === action.payload.id) {\n          return {\n            ...todo,\n            item: action.payload.item,\n          };\n        }\n        return todo;\n      });\n    },\n\n    completeTodos: (state, action) => {\n      return state.map((todo) => {\n        if (todo.id === action.payload) {\n          return {\n            ...todo,\n            completed: true,\n          };\n        }\n        return todo;\n      });\n    },\n  },\n});\n\nexport const {\n  addTodos,\n  removeTodos,\n  updateTodos,\n  completeTodos,\n} = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;"]},"metadata":{},"sourceType":"module"}